---
import { Icon } from "astro-icon/components";
import Search from "./icons/Search.astro";
import products from "@lib/products";
---

<header
  id="header"
  class="fixed top-0 w-full bg-transparent text-white z-50 transition-colors duration-300"
>
  <div class="flex justify-between items-center py-8 relative text-white">
    <div class="flex justify-center items-center gap-5">
      <div class="text-xl ml-5">ðŸŒ„</div>
      <h1 class="hidden sm:flex text-2xl">All For Water</h1>
    </div>
    <div class="flex flex-row gap-5 items-center px-5">
      <nav class="hidden md:flex gap-x-5">
        <a id="home" class="transition-all nav-links hover:cursor-pointer"
          >HOME</a
        >
        <a id="contact" href="/contact" class="transition-all nav-links"
          >CONTACT US</a
        >

        <div class="relative nav-links">
          <button
            id="products-button"
            class="transition-all flex items-center gap-x-1"
          >
            PRODUCTS
            <Icon
              id="products-icon"
              name="ic:baseline-arrow-drop-down"
              class="transition-all"
            />
          </button>
        </div>
        <div
          id="productsDropdown"
          class="absolute top-20 mt-2 left-5 right-5 bg-white text-slate-500 rounded-md shadow-lg hidden grid grid-cols-5 gap-y-2 text-center items-center justify-center transition-all fade-enter"
        >
          {
            products.map((product) => (
              <a
                href={`/${product.id}`}
                class="block px-4 py-2"
                id={product.name}
              >
                <p class="hover:scale-110 transition-all">{product.name}</p>
              </a>
            ))
          }
        </div>
      </nav>
      <div class="relative">
        <input
          type="text"
          placeholder="Search..."
          class="px-3 py-2 rounded-md text-black focus:outline-none transition-all"
          onfocus="this.placeholder=''"
          onblur="this.placeholder='Search...'"
        />
        <Search />
      </div>
      <button
        id="menu-button"
        class="hover:cursor-pointer md:hidden flex right-3"
        onclick="sidebar.classList.toggle('translate-x-full')"
      >
        <Icon
          class="hover:scale-110 hover:cursor-pointer"
          name="material-symbols-light:menu"
          size={30}
        />
      </button>
    </div>
  </div>
  <aside
    id="sidebar"
    class="fixed z-50 top-0 right-0 w-64 h-full bg-header-bg text-white p-4 transform transition-transform translate-x-full duration-300"
  >
    <button
      id="close-button"
      class="flex pb-10 pt-5"
      onclick="sidebar.classList.toggle('translate-x-full')"
    >
      <Icon
        class="hover:scale-110 hover:cursor-pointer"
        name="material-symbols-light:close"
        size={30}
      />
    </button>
    <nav class="flex flex-col gap-y-10 justify-center items-center">
      <a
        onclick="sidebar.classList.toggle('translate-x-full')"
        id="home-sidebar"
        class="transition-all nav-links hover:cursor-pointer">HOME</a
      >
      <a
        onclick="sidebar.classList.toggle('translate-x-full')"
        id="contact-sidebar"
        href="/contact"
        class="transition-all nav-links">CONTACT US</a
      >
      <div class="relative nav-links">
        <button
          id="products-button-sidebar"
          class="transition-all flex items-center gap-x-1"
        >
          PRODUCTS
          <Icon
            id="products-icon-sidebar"
            name="ic:baseline-arrow-drop-down"
            class="transition-all"
          />
        </button>
      </div>

      <div
        id="productsDropdownSidebar"
        class="left-0 right-0 w-40 bg-white text-slate-500 rounded-md shadow-lg hidden flex-col gap-y-2 text-center items-center justify-center transition-all fade-enter overflow-y-auto max-h-64"
      >
        {
          products.map((product) => (
            <a
              href={`/${product.id}`}
              class="block px-4 py-2"
              id={product.name}
            >
              <p class="hover:scale-110 transition-all">{product.name}</p>
            </a>
          ))
        }
      </div>
    </nav>
  </aside>
</header>

<script>
  const dropdown = document.getElementById("productsDropdown");
  function toggleProductsDropdown() {
    dropdown.classList.toggle("hidden");
  }
  document.getElementById("products-button").addEventListener("click", () => {
    toggleProductsDropdown();
    toggleIcon();
  });
  document
    .getElementById("products-button")
    .addEventListener("mouseenter", () => {
      toggleProductsDropdown();
      toggleIcon();
    });
  document
    .getElementById("productsDropdown")
    .addEventListener("mouseleave", () => {
      toggleProductsDropdown();
      toggleIcon();
    });

  function toggleIcon() {
    const icon = document.getElementById("products-icon");
    icon.classList.toggle("rotate-180");
  }

  function toggleProductsDropdownSidebar() {
    const dropdown = document.getElementById("productsDropdownSidebar");
    dropdown.classList.toggle("hidden");
  }
  document
    .getElementById("products-button-sidebar")
    .addEventListener("click", () => {
      toggleProductsDropdownSidebar();
      toggleIconSidebar();
    });

  document.addEventListener("click", (event) => {
    const productsDropdownSidebar = document.getElementById(
      "productsDropdownSidebar"
    );
    if (
      !productsDropdownSidebar.classList.contains("hidden") &&
      !productsDropdownSidebar.contains(event.target as Node) &&
      !(event.target as Element).closest("#products-button-sidebar")
    ) {
      productsDropdownSidebar.classList.add("hidden");
      toggleIconSidebar();
    }
  });

  function toggleIconSidebar() {
    const icon = document.getElementById("products-icon-sidebar");
    icon.classList.toggle("rotate-180");
  }

  const header = document.getElementById("header");

  window.addEventListener("scroll", () => {
    if (window.scrollY >= window.innerHeight) {
      header.classList.add("bg-header-bg");
    } else {
      header.classList.remove("bg-header-bg");
    }
  });

  const home = document.getElementById("home");
  home.addEventListener("click", () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  });

  const homeSidebar = document.getElementById("home-sidebar");
  homeSidebar.addEventListener("click", () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  });

  const sidebar = document.getElementById("sidebar");
  document.addEventListener("click", (event) => {
    if (
      !sidebar.contains(event.target as Node) &&
      !(event.target as Element).closest("#menu-button")
    ) {
      sidebar.classList.add("translate-x-full");
    }
  });
</script>

<style>
  .bg-header-bg {
    background-color: #0f3666;
  }
  .nav-links {
    font-size: 1rem;
    font-weight: 500;
    width: fit-content;
  }
  .nav-links::after {
    content: "";
    display: block;
    width: 0;
    height: 2.5px;
    background-color: white;
    transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1) 0s;
    opacity: 1;
    z-index: 101;
  }
  .nav-links:hover::after {
    width: 100%;
  }
  .fade-enter {
    opacity: 0;
    transform: translateY(-10px);
    animation: fadeIn 0.3s forwards;
  }
  .fade-exit {
    opacity: 1;
    transform: translateY(0);
    animation: fadeOut 0.3s forwards;
  }
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes fadeOut {
    from {
      opacity: 1;
      transform: translateY(0);
    }
    to {
      opacity: 0;
      transform: translateY(-10px);
    }
  }
</style>
