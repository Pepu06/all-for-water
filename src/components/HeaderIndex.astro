---
import { Icon } from "astro-icon/components";
import Search from "./icons/Search.astro";
import { items } from "@lib/categories";
import ProductsDropdown from "./ui/ProductsDropdown";
import AsideProductsDropdown from "./ui/AsideProductsDropdown";
---

<header
  id="header"
  class="fixed top-0 w-full bg-transparent text-white z-50 transition-colors duration-300"
>
  <div class="flex justify-between items-center relative text-white">
    <div class="flex justify-center items-center">
      <div class="text-xl">
        <a id="logo" href="/">
          <img
            src="/fotos/logo.png"
            alt="Logo"
            class="h-32 w-32 rounded-full"
          />
        </a>
      </div>
      <h1 class="hidden sm:flex text-2xl font-edu font-medium">
        All For Water
      </h1>
    </div>
    <div class="flex flex-row gap-5 items-center px-5">
      <nav class="hidden md:flex gap-x-5">
        <a id="home" class="transition-all nav-links hover:cursor-pointer"
          >HOME</a
        >
        <a id="contact" href="/contact" class="transition-all nav-links"
          >CONTACT US</a
        >
        <ProductsDropdown client:only items={items} />
      </nav>
      <div class="relative">
        <input
          type="text"
          placeholder="Search..."
          class="px-3 py-2 max-w-32 sm:max-w-60 rounded-md text-black focus:outline-none transition-all"
          onfocus="this.placeholder=''"
          onblur="this.placeholder='Search...'"
          id="searchInput"
        />
        <Search />
        <div
          id="searchResults"
          class="absolute bg-white text-black mt-2 rounded-md shadow-lg w-full max-h-64 overflow-y-auto hidden"
        >
        </div>
      </div>
      <button
        id="menu-button"
        class="hover:cursor-pointer md:hidden flex right-3"
        onclick="sidebar.classList.toggle('translate-x-full')"
      >
        <Icon
          class="hover:scale-110 hover:cursor-pointer"
          name="material-symbols-light:menu"
          size={30}
        />
      </button>
    </div>
  </div>
  <aside
    id="sidebar"
    class="fixed z-50 top-0 right-0 w-64 h-full bg-light-blue text-white p-4 transform transition-transform translate-x-full duration-300"
  >
    <button
      id="close-button"
      class="flex pb-10 pt-5"
      onclick="sidebar.classList.toggle('translate-x-full')"
    >
      <Icon
        class="hover:scale-110 hover:cursor-pointer"
        name="material-symbols-light:close"
        size={30}
      />
    </button>
    <nav class="flex flex-col gap-y-10 justify-center items-center">
      <a
        onclick="sidebar.classList.toggle('translate-x-full')"
        id="home-sidebar"
        class="transition-all nav-links hover:cursor-pointer">HOME</a
      >
      <a
        onclick="sidebar.classList.toggle('translate-x-full')"
        id="contact-sidebar"
        href="/contact"
        class="transition-all nav-links">CONTACT US</a
      >
      <AsideProductsDropdown client:only items={items} />
    </nav>
  </aside>
</header>

<script is:inline>
  const header = document.getElementById("header");

  window.addEventListener("scroll", () => {
    if (window.scrollY >= 50) {
      header.classList.add("bg-light-blue");
    } else {
      header.classList.remove("bg-light-blue");
    }
  });

  const home = document.getElementById("home");
  home.addEventListener("click", () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  });

  const homeSidebar = document.getElementById("home-sidebar");
  homeSidebar.addEventListener("click", () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  });

  const sidebar = document.getElementById("sidebar");
  document.addEventListener("click", (event) => {
    if (
      !sidebar.contains(event.target) &&
      !event.target.closest("#menu-button")
    ) {
      sidebar.classList.add("translate-x-full");
    }
  });

  import { productos } from "@lib/products";
  import { items } from "@lib/categories";
  const categories = items;

  // Función de búsqueda
  function searchProducts(query) {
    return productos.filter(
      (item) =>
        item.nombre.toLowerCase().includes(query.toLowerCase()) ||
        item.descripcion.toLowerCase().includes(query.toLowerCase())
    );
  }

  const searchInput = document.getElementById("searchInput");
  const searchResults = document.getElementById("searchResults");

  // Evento para manejar la entrada de búsqueda
  searchInput.addEventListener("input", (event) => {
    const query = event.target.value.trim();
    const results = searchProducts(query);

    // Limpiar resultados previos
    searchResults.innerHTML = "";

    if (results.length > 0 && query) {
      // Mostrar resultados
      results.forEach((item) => {
        const resultItem = document.createElement("a");
        resultItem.classList.add("block", "px-4", "py-2", "hover:bg-gray-200");
        resultItem.textContent = item.nombre;
        const category = findCategoryByProductId(item.id);
        resultItem.href = `/${category.nombre}`;

        searchResults.appendChild(resultItem);
      });
      searchResults.classList.remove("hidden");
    } else {
      // Ocultar resultados si no hay coincidencias o el campo está vacío
      searchResults.classList.add("hidden");
    }
  });

  // Buscar categoría por ID de producto
  function findCategoryByProductId(productId) {
    for (const category of categories) {
      if (category.productos.includes(productId)) {
        return category;
      }
    }
    return null;
  }

  // Opcional: ocultar el contenedor de resultados cuando el usuario hace clic fuera
  document.addEventListener("click", (event) => {
    if (!searchResults.contains(event.target) && event.target !== searchInput) {
      searchResults.classList.add("hidden");
    }
  });
</script>

<style>
  .bg-light-blue {
    background-color: #0f3666;
  }
  .nav-links {
    font-size: 1.2rem;
    font-weight: 500;
    width: fit-content;
  }
  .nav-links::after {
    content: "";
    display: block;
    width: 0;
    height: 2.5px;
    background-color: white;
    transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1) 0s;
    opacity: 1;
    z-index: 101;
  }
  .nav-links:hover::after {
    width: 100%;
  }
  .fade-enter {
    opacity: 0;
    transform: translateY(-10px);
    animation: fadeIn 0.3s forwards;
  }
  .fade-exit {
    opacity: 1;
    transform: translateY(0);
    animation: fadeOut 0.3s forwards;
  }
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes fadeOut {
    from {
      opacity: 1;
      transform: translateY(0);
    }
    to {
      opacity: 0;
      transform: translateY(-10px);
    }
  }
</style>
